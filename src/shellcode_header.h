#ifndef __SHELLCODE_H__
#define __SHELLCODE_H__

#include <stdint.h>

//simple encrypt to avoid antivirus detection
const DECLSPEC_ALIGN(32) uint64_t _PE_MEM_LOADER[] = {
0xC031480B75C98548, 0xCCCCCCCCCCCCCCC3, 0x000001E8158D48F8, 0xB848D78948F98B4C,
0xCBD2B12DB7AFF8CE, 0xB90DC0C149C08949, 0x6666666600000272, 0x0000000000841F0F,
0x314DC131490A8B4C, 0x05C0C1480A894CC1, 0x08C2834803C8C149, 0x13C0C148E475C9FF,
0xF5E5894828EC8348, 0xF3C0570F20EC8348, 0x0045314800457F0F, 0xB636B84908453148,
0x314C2447DFB99B78, 0xBE60AB1BB9490045, 0x084D314C7A45EFF5, 0x00000400B78D48F9,
0x008B4C655848606A, 0x20408B4D18408B4D, 0x00408B4D00408B4D, 0x00558D4820488B49,
0x481D74C08548D6FF, 0xF548FFFFFF40BF8D, 0x48C48348C8478948, 0xCCCCE7FF48F9894C,
0xFFC88348CCCCCCCC, 0xCCCCCCC348C48348, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0x0000000000000000, 0x0000000000000000, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0x68EC834856405340, 0x00000030B8CB8948, 0x4401482024448948, 0x3120244C8D482024,
0x35E82824448D4CD2, 0x7275C0854800000A, 0x0589482824448B48, 0xE8D98948FFFFFF84,
0x65C689480000007C, 0x0000006025148B4C, 0x617574726956B848, 0x8B4D18528B4D466C,
0x8B4D00528B4D2052, 0x8948204A8B490052, 0x72382444C7302444, 0x3024548D48006565,
0x85480000043AE848, 0x28244C8B481474C0, 0xB841D23148D1F748, 0x4890D0FF00008000,
0x5B5E68C48348F089, 0xCCCCCCCCCCCCCCC3, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0x71744F8F09E177F4, 0xC919DB54337F6E96, 0x625B68D75BE65F06, 0xB5FA4249796716FA,
0x75F550A4E3B5675E, 0x2164BBB585BCDE19, 0x45EA34FBBF8D50C5, 0x27F39F82BFEEEA56,
0x3E052814BFD05300, 0x956E38BBDA93684A, 0x96104AA39CB821CC, 0x98E902C5559128EA,
0x577FF39111AFABA6, 0x1A87E6E6DA1CB9BD, 0x2FB5B168B30C819A, 0x22269573B490D87C,
0x4658443B69772AF8, 0x8B1C8A990A3B7419, 0xE08E2C33911E28DD, 0x1E0FCEBC24496EFC,
0x18A4E56BA4788636, 0xF5E5CB3D3D9216FD, 0x3491929758C1D5C7, 0x1473D41B63E90784,
0x3B16B239AB3CB621, 0xB3FE91DF684A1C92, 0x2CC5FA46661C3E65, 0x05E5BDC90C0287E6,
0xF9F1BE9DA0A2380D, 0x59B816BAB218FF13, 0xC92FC1AB3F37989B, 0x9573F00BC815F2AD,
0x2E7696BBD9F5B0D7, 0x0B0E57FC0C9E7BA9, 0x6810A3AA22DD298E, 0x9A99A503E130830C,
0x093005B447FD50A5, 0xBC781ADAA84E86BB, 0x97E0A6AC22F0A3B9, 0x3F222695E390B84E,
0x63A0E10DE605C014, 0x9293F2CE1322F630, 0x9C2005F8A8D70FA3, 0xB1AF35C3081F06A9,
0x187EA4E3B3C9328A, 0x9BF3BAF07CDF4EE6, 0x5DA5B997459D065A, 0xFCFC4C3B222691B7,
0x21B49D6983D78833, 0x6AF0BBD38316C15D, 0xD102E8E8E080961C, 0x2980ADBE42448084,
0x2AD0E3187EC2DCC7, 0x5B51E99BF33EEF73, 0xD6F4DB3023775401, 0x70183BB3FF17C42D,
0xD84A81C9649EBF05, 0xEB02445636B5DA93, 0xC2EB575BC3EB94E3, 0x79461DA1066EF5C1,
0xC2DAF658700637D7, 0xBC97471E376CEEFF, 0xDCB92FB5EB7DCC18, 0xC773222695F7AB1B,
0x1DFB8A908C012EF5, 0xC953D2548750A9B3, 0xA39C1CC82CE81D55, 0xC55C4A4D90ECC905,
0x42360C4FC372CFF7, 0xE8B01A450F83A592, 0x98F4695B5C08D38D, 0x3B90D993F8632454,
0xF321B49D77235CC5, 0x54F4F578B25E2CC1, 0x9614B55C63DFC4AF, 0x98E9019555E928C2,
0xD477F3E3BAE7E585, 0x7CFFCE62DA66C8F6, 0x495209146EEEBADF, 0x420391F8FC71C773,
0x37FC1C3B69B49DF7, 0xDB684A1C8249BBD3, 0xAB4D7057D7025D9F, 0x9BB4CE90624DC5FC,
0x50D1A5D728F7E90A, 0xC39EB4F51371A010, 0x05D5B63DB0E3A3FD, 0xD3FF5766AFDD12E0,
0x5C9D926BBA089265, 0xBEF819DF684A1D16, 0xE00824681B1CDFD9, 0x8EA91763A62C3243,
0xFE4AF5504714FB8A, 0x916C4A0CFBF3969A, 0x72E448A87D9740A6, 0x95A3339F8611C9D9,
0xC3FE15C05D7207D8, 0x6068F973788AA334, 0x4A6B9CCFEB9FAB4D, 0x8698E905E539D603,
0xE3B34CB73FBE2BE1, 0xB3F71381165578F2, 0x1FCC9B85403823B2, 0xB3A70ED2F8F5F2B2,
0x37349D8EB5699BE9, 0x5C18204A1C22F78A, 0x5B681E1DDFD99A5C, 0x6B4244796716F926,
0x96E75B1C4C8D71CD, 0x703031B87C5B522D, 0x91C731978F58C518, 0x90604C3F222695E3,
0x21B405D3A35304E6, 0x22F6B8B60FE3021C, 0xDF02FBB84C8E241F, 0x25C6BBE2964DE65C,
0x807A49B2D4682F7F, 0x979D25573F763CB0, 0x1F41D779A7761385, 0xEA59BF78D80BBFEE,
0x14847AED78513BCB, 0xA486D0EE3AFC5E5F, 0xC9A4D390866F50EC, 0xC04A5425C9297105,
0x682F7F807A49B2D4, 0x763CB0979D25573F, 0x7613851F41D779A7, 0x0BBFEEEA59BF78D8,
0xCAA152F86CEAA8FC, 0x307E12201D5D76B7, 0x28D0CA8E201F5C48, 0xE4D04D034F1DA1CC,
0xE1FA177666FB4CB6, 0xE99BA9F7487C5B50, 0x1BB43D3FD048EAEB, 0x23BC28464F63AD95,
0xB620F218F807D80D, 0x1C227E3836182C4A, 0x1E69CEAC78A54068, 0x98650D61368D0C86,
0x4C7F97B1F352A4E3, 0x7C5B5099BF7733B4, 0xC89B72E44A94059E, 0x093CE273B4EB3889,
0x035B47A24F8F8D99, 0x9020565AA9F63093, 0x2005D3F6F45E285D, 0x1B89C380BF8EA1BD,
0x91E8E3B34C2A0171, 0x78FEF07C5A29CD37, 0x82B99269BD065F6A, 0x9D8B0F5A277FF0F5,
0xD2FBF707D9C89295, 0xD737929E68CE032D, 0x9B66176C1F74921F, 0x06ACBD54400DD912,
0xD0E3187E65C8FF85, 0x70EE9BFEBA746354, 0x9CADBA63BE694692, 0x91077490C63AAF6E,
0x4EC5E38E7183C5E2, 0x4C6A351DCFC11E2C, 0x269453A1A2C7AD41, 0x4F9BA004BF308C28,
0x398809EFB9C917E0, 0xF1FC7FE562D755C4, 0xDE39F70990F16BBA, 0x725A0239F8F814C7,
0xB074CC368D65B49D, 0x19D2A949553EB0BB, 0xAB54D7ED9748C16C, 0xBDC9DC04973D3EA4,
0x71C89FC3B7C1F585, 0x5978FEF07C5B956A, 0xBA2A625400128E56, 0x2472D607E2A295C5,
0x20F72BF823AC668A, 0x1107455217ABB554, 0x5C48EBB8BC8E20DF, 0xE905E7BD0D8DCE98,
0x8FEBDB2144E5BCF2, 0xDA1939B0BA697B34, 0x9B5568B56BBBFFB3, 0xB6830766918FB4A9,
0xAC813221B82BF846, 0xA8B55402F27C1A9F, 0x49E557B73861A768, 0xE4A69C958DA59DED,
0xEC233800B6857E44, 0x99F107DBF29D5B76, 0x0CD064A68C483823, 0x15F720E5163BB647,
0xC67A4F080A3B3FC0, 0xF22C9C7B3D151EF7, 0xDC1133B367A060C7, 0x07C81B88FEA464ED,
0x6D32D02FAA642FFE, 0x166493530F83A685, 0x4D5CAAB9968B5872, 0xBF78D80BBFDDD96A,
0x7AED4B620FC5FDB7, 0xD0EE3AFC5E5FA486, 0x4BD502BBB8648C24, 0x13A13D093E811CA2,
0xF78BFE7A81E03FE6, 0x8B1251E99BF3F2D4, 0x00C0F91BB564451F, 0xA36F6A8C441427F2,
0x435104B621A49D37, 0xB72C8DCCD5BE60B6, 0x6C88241F5C4AA7B4, 0xF90CA6BCADC2B599,
0x4C29AB737FF3857E, 0xEBEA0F7CD019A1BF, 0xE8F21F7AD4F4DB30, 0x5CE337A96E564B70,
0x78513BC4E08C3569, 0x3AFC5E5FA486D0EE, 0xA620D438212C9610, 0xFA1A45E9090DD0A1,
0x46859C99EC3A3800, 0x51E9ABD7FE3783A4, 0xC523913F339749D3, 0xD9A3435CF7576EAB,
0x6CE2ACFCFDD34355, 0x6E58A9BE2019DF50, 0xA05A530263196875, 0x4D13A025C1F14044,
0xAB77CFFEBD2CE7E5, 0x3CB0979D25573F79, 0x33CA9B9D3FE1E2F2, 0x8CDDD155763F5CFF,
0xF707D868926573D5, 0xB6D7E506CCD5BE30, 0xD42005E81FE50B83, 0x42C987CED0CD5168,
0xB2DB9C27300496D5, 0x573F763CB0979D25, 0x79A77613851F41D7, 0x78D80BBFEEEA59BF,
0x56BB65744E19C3FE, 0x03F1309F1377450B, 0xAEC1EB65AB4D3E48, 0x2A5ABB193AC40DD1,
0x43459F09385C60FA, 0x59058694B149FA13, 0xDCCFE8BC14B52CB9, 0xEA59BF77E4C6275D,
0x94828D69B6917A49, 0xEA45D519BFF9D49C, 0x070710AF4AA39CEC, 0x45769A856AEAFF3A,
0x22ECB34CB6058699, 0xF339F71751E99B63, 0xF3CFA050C41454E8, 0x06706FF7BE3A7D3F,
0xEBF707D8C84EA0FD, 0x11959365CA032D85, 0xF1F32FF6627053B9, 0xEA4EE956E9971A15,
0xE37767AB85832ED9, 0xB0E4FCDCE02D245E, 0x14465BDBA046B5AD, 0x23E67BC880626CFA,
0xD92E47FDAD68D7BB, 0x7A62BF4F9DF51828, 0x462345C5CC717A67, 0x19A17584C2C66AE6,
0x71CDFE857E182422, 0xFCB3D0A09BF3BA70, 0x4953759AFC6BBADF, 0x2D6E183E2067C773,
0x78D70A45D1551EBE, 0x7A683513D10631FE, 0xECC9A4D3A3B55D60, 0x05C04A5425C92971,
0x1BED329804A49571, 0x70F2006D1F41E653, 0xAA4CCFA150C40B5C, 0x978FBAA96A8D07BB,
0xB08DF8CFC84746C0, 0x37BBDE9A79455D33, 0x8BEA54AB48A83410, 0xEEE494C67CF29F00,
0x7A49B2D4682F7F5A, 0x9D25573F763CB097, 0x82129C64AA9E60DC, 0x843FA41B37626636,
0xC8FFACFC54084E38, 0x2A550BF940D3BA67, 0x240F531AB2D8300A, 0xAF97B944CCB2891D,
0xEC835DF2957158ED, 0xC03D725EC98ABFAA, 0xCE0DC3823BFC42B5, 0xC35726843FA41BD7,
0x88E75B01A6609D92, 0xDB5BE3078CE3DE3F, 0xFA461F1C8F58A362, 0x9CCE0C8B986D1AEA,
0x71084D60FB4DA78A, 0x6B86730F354A55F9, 0xA464B9AB46330E52, 0x78D80BB023379A63,
0xED78513BCB14847A, 0xEE3AFC5E5FA486D0, 0x90866F50ECC9A4D3, 0x25C9297105C04A54,
0xC1FFD2284D7868FF, 0x5B50D97772F24817, 0x9BE8EB3E22BB5449, 0xADDD6BF59F8F7BA9,
0xA0C3FE203FD5D74F, 0x6F88982D09B5DAB3, 0x7DEB575CC1EB9C20, 0x0C869F5D81EABDE9,
0xB4903A01BEDEF751, 0xCF22F981DA1FA8B6, 0x1A45D84505A3FD2D, 0xFF576EABDDF82E8C,
0xD5F5B5E06CF2A8FC, 0xA0041FE5D095824E, 0x067460212C9614DB, 0xDD999D81CE98E902,
0x4AF550ECC7C7C5FA, 0x291EBB450F8588B9, 0x53ADE0F20FB6D6F9, 0xEF248754CDA9972D,
0x3F698CB9BB8A90D6, 0x979ABE3320AB4C0E, 0x57C2C02811B6ACF2, 0x2A7ABDADFDED480F,
0x3A048403F3883679, 0x7C5B56B973BB9EB4, 0x3D5BC923913F3797, 0xDB587DBC3F5C8857,
0x4FCE3C76A4FC6208, 0x7F3DC7543A83EB17, 0x20056F47B48228D4, 0x090E3E939D041D3E,
0x90E16AFB335D857E, 0x69207DC5D0E051D3, 0x6ADAFBF55AC18D1C, 0x5CFF5766AFDD73B4,
0x390D4F4FE06CFAAC, 0x49790821FBD4FAA4, 0xD8392EB39BE294D1, 0x49AD998D85CE9B5B,
0xB683A9F0E4C7CFC5, 0xD9ADA3D7EE7D345B, 0x88F37AE0F2946DA7, 0x830774918F8CDDDF,
0x1D3B698DE82C8290, 0x4A1AFD1EF819DB98, 0x6BA7703EA264A305, 0xE6BC558EA9BDC9CC,
0xB397D03DCD7E18A5, 0xA858EFDAA59BF3BB, 0xDE79170C53B56BBB, 0xFA6AE5C82DEB14C7,
0x6DAA53F90E6924D8, 0xB6EFE1068A8B6DAE, 0x11683D4C5BD502E3, 0x3B449C3ED0D121A9,
0x361B16690A6E2572, 0x9BF5F518347F1560, 0x3D2F82FB1D5EC51B, 0xC9FC08F86A6DB107,
0x37C05D724F27B74E, 0x777B7889E6B3CF54, 0x5C4CF474E88E20E7, 0xEDBDEBC9C8F40598,
0xB3497A0DF1A4E373, 0xD0E051D353FF7934, 0x5EC5872FE02A52E6, 0x1EB1373D5CFF576E,
0x55DE1FAA0CD5F4B5, 0x4C0E956A65AE1818, 0x88F88DC6F81BD460, 0x44A2DC604D4A544F,
0xF06EFB4CB680A5F0, 0xF2BE582FD9ADA3D7, 0xF220B62B84F37AE0, 0xB2A8A76E83077491,
0x557C4F241D3B69AF, 0x316A10684A19C11E, 0x4A9C20C56EA7523E, 0x4DF84044796717FA,
0x14E497146802F4FE, 0xA1FBD7F67D34D6FE, 0xA3FD6908BF6D9704, 0xD10B0E4BFFB8BA05,
0xB3575CF5D3435100, 0x5842D2641FDB684A, 0xF793C1EBF10471E0, 0xEC2980AD4236FB22,
0x3E04ADF0A59DECF5, 0x7925B92110BBBEA5, 0xF1DDF91A4DE8BADF, 0xDDD80F9AB414077B,
0xB660000E643DD508, 0xDBD2CC82B16C8B19, 0x921D2D961452EE11, 0x42861A026EBDADBF,
0xF084A63A042715E8, 0xEBEF7D345B51EC8F, 0x83755401FBF892F9, 0x1B07F66AD96A84F0,
0xF114BF07D84C73A5, 0xF5CE179CB3CF54FA, 0x0A2ED0324DE31F5C, 0x84E54236F36719FB,
0xFA920A1867E6BCB5, 0xAECC93B331F83CD6, 0x8DD8B06487DFB62C, 0xD0F8B414C3FFA729,
0x2ED06190D97E4F34, 0x6B1B22FB30168C67, 0x63577CA862D4110A, 0x816708842D3681CE,
0xE0FA4857443618A4, 0xF083A4AECC9A7872, 0xB990A68DD8B06487, 0x5225269873300BC8,
0xFC4FF8AA77698592, 0x956C8BCBC4A9BEF2, 0x9F69018BDE144AA3, 0x4236F36419FA8E3D,
0x0B1867E6BCB63785, 0xB3D7FE37ADAC193E, 0x9127339749D38D1F, 0x395CF7576EABD94B,
0x6990D9304FE06CFA, 0x6A3603D76C97B5E3, 0x5C4A239C10212CD8, 0x9D8CA9E5ED580BD0,
0x7CB6A55A5C63BB97, 0xDE51E99EE252F07C, 0x9B72E4480F32D089, 0x262DFEFC4CE337A9,
0x53048EA8FC9DF717, 0x484ADCA3BF68B6D7, 0x84207729C3E79C20, 0x408698C905D599A5,
0x65AB8243D6A13A91, 0x6AFB3488A6A1BB11, 0x6AEC01A3A95F3823, 0x8FB9A96E7536395C,
0x16BBCE530496C875, 0x7C406429802F6E27, 0x90D9E9B2675E9479, 0xF55508444713A0D4,
0xC1B9A1ED22800DD0, 0xE6DF0C450F835F75, 0xDB03647BEC010B3B, 0x7757D58E33E2A5DD,
0xF8F9B7D0F3E71900, 0xEB4434879D8B6CC7, 0xDE6F02ABC4A94CB8, 0x9D644DB5AD89CBC7,
0xA7CBFA3D36C812EC, 0x7CD21850D3A3E3D4, 0x61934B5AB6A93997, 0xF225DC7756D58FB0,
0x4FDCA977EB0292B6, 0x53430B7C637BFA91, 0x681128961D524B1F, 0xC444A678284D2736,
0x00E46AFA68B24236, 0xFEF2315F129362D3, 0x4BFA5600D7A95F72, 0xEBC75786ABDDCBFC,
0x0CD59746510049DE, 0xF63090B34CEE916A, 0xCDEB24686D299614, 0x8CAD368198CEBCED,
0x3DCD76701CABC30D, 0x29A812BB39B87C1B, 0x005371E0F28FF19B, 0x9573B49446B40682,
0x48F4A8FC5134171C, 0xCD54DD09C9122B20, 0xD05754082AD40429, 0xA29C604DED514A44,
0x6EFBF4FE953C91EC, 0x7934A4AE177BD71E, 0xF7C0E372A3FD73F8, 0x5360AFDD7BF4998F,
0xE608E808A62E0CD5, 0x2ADB4008956AD274, 0xD8310A285F4C458B, 0x85EDB4CEA8AB8CAD,
0xF750B5ECE30CA68A, 0x94BB9EB4C41369AB, 0xF529339746B3CD0B, 0x55EB16846A622C3A,
0x7990D9E6BF90847A, 0x6AB4B9DA9328CD54, 0x15932AD0704FE153, 0x25C929717144566F,
0x54F70C36D4682F7F, 0xA4AE16644BEB4834, 0x5AC11BF4E2F26601, 0x296663FD9D8B7B63,
0xC803D92EF56EF668, 0x1745EF02B74F9D60, 0xF6285E234550AC69, 0x4DF9971A55ACC2C6,
0x1DA2C305C98A8D78, 0x9EA4F11351E99BD3, 0x314F79F7C996F90B, 0xC336A924D4FA5851,
0xBD368490C0FBA8FC, 0xB9DA6F2DC11E637F, 0xE21500C4EB57E407, 0x4DF040447EDD6207,
0x0E7C592DC372CFFE, 0xA1DBD7FE7934A714, 0x5315263397219600, 0x57F09D8F4B066A18,
0xB621B6E51F39E668, 0xE3DD0CFB1A9CA8CF, 0x5AD102D3B8642D67, 0xB8E935C1F90E44EE,
0xBC7C92C1F354A4E3, 0x3D0375BD16BBBDE1, 0x04FB821BB56BB866, 0x3329AD57F8998FF3,
0x08F86CF2A8FC8DB8, 0x9C480D0D2D6675BA, 0x2F35270E53EAEEB4, 0xC64CC189E6B5A095,
0x17F4ACA24376C856, 0x1BDAB76D5481ACB3, 0xE3B51FCCD38D19B9, 0x3083F86AD96A89EB,
0x879B7E4F08BFFE79, 0x3AFC6D6C9207F5E2, 0x4AA39C242D4C5B9B, 0x716CF1A928CA15A5,
0xFEB55A4C29AB8368, 0x51E9BBF3DAD4389C, 0x8D1B856B9AFB0D14, 0x1D264B5C38BAA16E,
0xB749DBA715F8C75D, 0x0E916EC614DE1820, 0x681F5C481ADD4021, 0x0715A135C1E94444,
0xABB2C5FE857E08A4, 0x80581F79E6643A39, 0xD0C99EA514B57AB5, 0x7CB263BD7CA45CD6,
0xF8A79560B901F48C, 0x9D232D621312BE21, 0x93E04840101C0AB2, 0xB21949AE97B94DF4,
0x3670E16EFB2CF694, 0x33A645B85C7F1560, 0x4A94437CC1DC4D9E, 0x64E38F4306621E3B,
0xD825743734DEC1FE, 0xCB289D524DD0B5E3, 0x5C4B9624DFFA9198, 0xE905E48D0D8DCE58,
0x807A49B2DBF9BDEC, 0x979D25573F763CB0, 0x1F41D779A7761385, 0xEA59BF78D80BBFEE,
0x1AFEB936C0623587, 0x680A032D37341FDB, 0x85905FD102B36B68, 0x44442EE6F190420B,
0x6722BFC1FE446AEF, 0x763CB0979D25573F, 0x3F978858C1C93E27, 0x4C7322262CF7BBDD,
0x9682BF09C3FA1CB5, 0x30932B6AC318637D, 0x1A8454EC54DC5C4A, 0x917CF26A8698CCFA,
0xBE1818A45BFBF5B8, 0x519BF3BA79F95490, 0x1BB57B03DF49D38C, 0x52B314CAF33D2995,
0x7C0AF8557C4A09C3, 0x689A27BBDEAAE90B, 0xCED706A1A0A1472E, 0x1BF971E7B144423E,
0xC56C4E06BEE7B422, 0xFF98AE16640C0227, 0xC2928C1F3E2DBE1E, 0xCBF75DF8743F83A3,
0x460963B621B49C4F, 0xD7606F18D4FE4913, 0xABC66A961988E793, 0x3F04FF19A8EF346D,
0xD92733F643BEA07A, 0xF3BAF1C49A7AA567, 0xA8A85608C38E5AB5, 0xD80BBFEEEA56B387,
0xA4CC7C4BD0394969, 0xF3BDDAD76803976A, 0x8E28D47005681F30, 0xFA1A4449282215A1,
0xBE69FD5080CF3404, 0x754D16BB9EF4F513, 0xA59285944520B733, 0xA533A41BCF33AF6E,
0x08A62E9CB9B316D7, 0x5A131AD274839C28, 0x6757780EB2937045, 0xDEBCAD14EADD891C,
0x324404F2853E9FEC, 0x3CB0979D25571245, 0x13851F41D779A776, 0xBFEEEA59BF78D80B,
0x08F82848928539D5, 0x6D6C984A38867B78, 0x9C2024483BF8C7EB, 0x368198CEBCED82AD,
0xFD50A4A33804BEED, 0x573F763CB098412D, 0x79A77613851F41D7, 0x78D80BBFEEEA59BF,
0xED78513BCB14847A, 0xEE3AFC5E5FA486D0, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC
};

const DECLSPEC_ALIGN(32) uint8_t _shellcode_Const[] = {
0x00, 0x00, 0x00, 0x00,                              //uint32_t unlocker_pid                        _shellcode_[0]
0x20, 0x90, 0x8C, 0x68,                              //uint32_t timestamp                           _shellcode_[4]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t unlocker_FpsValue_addr              _shellcode_[8]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_il2cpp_fps                      _shellcode_[0x10]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_Engine_fps                      _shellcode_[0x18]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t hksr_ui_ptr \ Hooked_funcstruct     _shellcode_[0x20]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t hksr_ui_type \ verfiy_func_ptr      _shellcode_[0x28]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_Function_link                   _shellcode_[0x30]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_struct_NtAPI                    _shellcode_[0x38]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	     //uint64_t PHooked_func_once                   _shellcode_[0x40]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Pplat_flag                          _shellcode_[0x48]
//Xmmseg Hook_once_pattern                                                                          _shellcode_[0x50]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//Xmmseg org_part                                                                                   _shellcode_[0x60]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//Xmmseg hookedpart                                                                                 _shellcode_[0x70]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_MessageBoxA                     _shellcode_[0x80]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_CloseHandle                     _shellcode_[0x88]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_GetForegroundWindow             _shellcode_[0x88]
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3                                               
0x55,                                                //push rbp
0x53,                                                //push rbx
0x56,                                                //push rsi
0x57,                                                //push rdi
0x41, 0x57,                                          //push r15
0x48, 0x83, 0xEC, 0x70,                              //sub rsp, 0x70
0x48, 0x8D, 0x6C, 0x24, 0x20,                        //lea rbp, qword [rsp+0x20] 
0x89,0xCA,                                           //mov edx, ecx
0xB9, 0xFF, 0xFF, 0x1F, 0x00,                        //mov ecx,1FFFFF
0x48, 0xE8, 0xA4, 0x03, 0x00, 0x00,                  //call API_OpenProcess
0x49, 0x89, 0xC7,           			             //mov r15, rax
0x48, 0x85, 0xC0,               	                 //test rax, rax
0x74, 0x60,             				             //jz return
0x44, 0x48, 0x8B, 0x3D, 0x3C, 0xFF, 0xFF, 0xFF,      //mov rdi, qword[unlocker_FpsValue_addr]
0x4D, 0x31, 0xF6,                                    //xor r14, r14 
0xBB, 0xF4, 0x01, 0x00, 0x00,                        //mov ebx, 0x1F4        (500ms)
0x44, 0x48, 0x8D, 0x35, 0x04, 0x00, 0x00, 0x00,      //lea rsi, qword:[Read_tar_fps]
0x48, 0x89, 0x5D, 0x08,                              //mov qword[rbp+0x8], rbx
//Read_tar_fps                                       
0x4C, 0x8D, 0x44, 0x24, 0x28,                        //lea r8, qword:[RSP+0x28]        
0x4C, 0x89, 0x74, 0x24, 0x20,                        //mov qword ptr ss:[rsp+20],r14
0x41, 0xB9, 0x04, 0x00, 0x00, 0x00,                  //mov r9d, 0x4  
0x48, 0x89, 0xFA,                                    //mov rdx, rdi  
0x4C, 0x89, 0xF9,                                    //mov rcx, r15  
0x48, 0xE8, 0xE4, 0x03, 0x00, 0x00,                  //call API_ReadProcessmem
0x85, 0xC0,                                          //test eax, eax     
0x75, 0x10,                                          //jnz continue   
//read fail                                          
0x48, 0x83, 0xC6, 0x30,                              //add r15, 0x30         //控制循环范围
0x4C, 0x89, 0xF9,                                    //mov rcx, r15
0xE8, 0x74, 0x00, 0x00, 0x00,                        //call Show Errormsg and CloseHandle 
0x0F, 0x1F, 0x40, 0x00,                              //nop
//continue                                           
0x8B, 0x4C, 0x24, 0x28,                              //mov ecx, qword:[RSP+0x28]      
0x48, 0xE8, 0x16, 0x00, 0x00, 0x00,                  //call Sync_auto
0x89, 0xD9,                                          //mov ecx, ebx
0x48, 0xE8, 0xFE, 0x03, 0x00, 0x00,                  //call API_Sleep
0xFF, 0xE6,                                          //jmp rsi
//return                                             
0x48, 0x83, 0xC4, 0x70,                              //add rsp, 0x70
0x41, 0x5F,                                          //pop r15
0x5F,                                                //pop rdi
0x5E,                                                //pop rsi
0x5B,                                                //pop rbx
0x5D,                                                //pop rbp
0xC3, 											     //ret
//int3
0xCC,
//int3
0x48, 0x83, 0xEC, 0x38,                              //sub rsp, 0x38
0x44, 0x48, 0x8B, 0x05, 0xD4, 0xFE, 0xFF, 0xFF,      //mov rax, qword ptr [Ptr_il2cpp_fps]
0x48, 0x85, 0xC0,                                    //test rax, rax
0x74, 0x1B,                                          //jz continue
0x2E, 0x8B, 0x00,                                    //mov eax, dword ptr ds:[rax]
0x83, 0xF8, 0x1E,                                    //cmp eax, 0x1E
0x74, 0x0D,                                          //jz equ30
0x83, 0xF8, 0x2D,                                    //cmp eax, 0x2D
0x74, 0x0E,                                          //jz noil2cppPtr
0x2E, 0xB9, 0xE8, 0x03, 0x00, 0x00,                  //mov ecx, 0x3E8 //equ60
0xEB, 0x06,                                          //jmp continue
//equ30
0x2E, 0xB9, 0x3C, 0x00, 0x00, 0x00,                  //mov ecx, 0x3C
//continue
0x48, 0x8B, 0x05, 0xCD, 0xFE, 0xFF, 0xFF,            //mov rax, qword ptr [Ptr_Function_link]
0x48, 0x85, 0xC0,                                    //test rax, rax
0x74, 0x04,                                          //jz noExtfunc
0xFF, 0xD0,                                          //call rax
0x89, 0xC1,                                          //mov ecx, eax
//noExtfunc
0x44, 0x48, 0x8B, 0x05, 0xA4, 0xFE, 0xFF, 0xFF,      //mov rax, qword ptr [Ptr_Engine_fps]
0x89, 0x08,                                          //mov dword ptr [rax], ecx
0x48, 0x83, 0xC4, 0x38,                              //add rsp, 0x38
0xC3,                                                //ret
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x48, 0x83, 0xEC, 0x68, 							        //sub rsp, 0x68                   
0xFF, 0x15, 0xFE, 0xFE, 0xFF, 0xFF, 			            //call [API_closehandle]
0x31, 0xC9,										            //xor ecx, ecx
0x3E, 0x48, 0x8D, 0x54, 0x24, 0x20,                         //lea rdx, [rsp+0x20]             
0x4C, 0x8D, 0x42, 0x10, 							        //lea r8, [rsp+0x10]              
0x48, 0xB8, 0x53, 0x79, 0x6E, 0x63, 0x20, 0x66, 0x61, 0x69, //mov rax, 'Sync fai'      
0x48, 0xC7, 0x42, 0x08, 0x6C, 0x65, 0x64, 0x21,             //mov qword ptr [rdx+8], 'led!'   
0x48, 0x89, 0x42, 0x00,                                     //mov qword ptr [rdx], rax        
0x41, 0xC7, 0x00, 0x45, 0x72, 0x72, 0x6F,                   //mov dword ptr [r8], 'Error'     
0x66, 0x41, 0xC7, 0x40, 0x04, 0x72, 0x00,                   //mov word ptr [r8+4], '!'        
0x41, 0xB9, 0x10, 0x00, 0x00, 0x00, 		                //mov r9d, 0x10 (MB_OK)
0xFF, 0x15, 0xBA, 0xFE, 0xFF, 0xFF, 			            //call [API_MessageBoxA]          
0x48, 0x83, 0xC4, 0x68,                                     //add rsp, 0x68
0xC3, 											            //ret
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3 
0x40, 0x53,                                                 //push rbx                     //entry
0x48, 0x83, 0xEC, 0x60, 							        //sub rsp, 0x60
0x4C, 0x48, 0x8D, 0x1D, 0x22, 0xFE, 0xFF, 0xFF, 	        //lea rbx, [code_block]
0x48, 0x8D, 0x4B, 0x38, 							        //lea rcx, [rbx+0x38]//ntapi_struct
0xC7, 0x01, 0x60, 0x00, 0x00, 0x00,                         //mov dword ptr [rcx], 0x60
0x31, 0xD2,                                                 //xor edx, edx
0x49, 0x89, 0xC8, 								            //mov r8, rcx
0xE8, 0x2E, 0x05, 0x00, 0x00, 					            //call Init_NtAPI
0x85, 0xC0, 							        			//test eax, eax
0x75, 0x1C, 							        			//jnz exit
0x48, 0x89, 0xD9,   					                    //mov rcx, rbx
0xBA, 0x00, 0x40, 0x00, 0x00,   		                    //mov edx, 0x4000
0x41, 0xB8, 0x20, 0x00, 0x00, 0x00, 				        //mov r8d, 0x20
0x44, 0xE8, 0xF6, 0x01, 0x00, 0x00, 				        //call API_VirtualProtect
0x8B, 0x0B,                  			                    //mov ecx, [rbx]
0xE8, 0x8F, 0xFE, 0xFF, 0xFF, 					            //call main_sync_start
0x90,
0x48, 0x83, 0xC4, 0x60, 							        //add rsp, 0x60
0x5B,                                                       //pop rbx
0xC3, 												        //ret
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//hksr_setui_fptr_start
0x4C, 0x48, 0x8B, 0x05, 0xF8, 0xFD, 0xFF, 0xFF,
0x40, 0x49, 0x89, 0xC8,
0x8B, 0x0D, 0xF6, 0xFD, 0xFF, 0xFF,
0x89, 0x08,
0x4C, 0x89, 0xC1,
0xE9, 0x24, 0x03, 0x00, 0x00,
//int3
0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x53, 0x55, 0x56, 0x57,										//init_touch
0x48, 0x83, 0xEC, 0x48, 
0x4C, 0x48, 0x8B, 0x1D, 0xF0, 0xFD, 0xFF, 0xFF,
0x48, 0x8D, 0xAC, 0x24, 0x28, 0x00, 0x00, 0x00, 
0x48, 0x89, 0x4D, 0x08, 
0x48, 0x89, 0x55, 0x10,
0x48, 0x89, 0xD9, 
0xE8, 0x78, 0x01, 0x00, 0x00, 
0xF3, 0x0F, 0x6F, 0x05, 0xE0, 0xFD, 0xFF, 0xFF,
0xF3, 0x0F, 0x7F, 0x03, 
0x48, 0x89, 0xD9, 
0xE8, 0x74, 0x01, 0x00, 0x00, 
0x48, 0x8B, 0x4D, 0x08,
0xFF, 0xD3, 
0x48, 0x90, 
0x4C, 0x48, 0x8B, 0x3D, 0xBC, 0xFD, 0xFF, 0xFF, 
0x48, 0x8B, 0x5F, 0x10,
0x48, 0x8B, 0x1B, 
0x48, 0x85, 0xDB, 
0x74, 0x1C, 
0x48, 0x63, 0x47, 0x18, 
0x48, 0x8B, 0x0C, 0x03,
0x31, 0xD2, 
0xFF, 0x17, 
0x48, 0x63, 0x47, 0x1C,
0x48, 0x8B, 0x0C, 0x03, 
0x31, 0xD2, 
0xFF, 0x97, 0x08, 0x00, 0x00, 0x00, 
0x48, 0x83, 0xC4, 0x48, 
0x5F, 0x5E, 0x5D, 0x5B, 
0xC3, 
0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54,                    //push r15,r14,r13,r12                 //hooked_func VA + 0x200
0x53, 0x55, 0x56, 0x57,                                            //push rbx,rbp,rsi,rdi   
0x48, 0x83, 0xEC, 0x68,                                            //sub rsp, 0x68
0x44, 0x48, 0x8B, 0x35, 0x38, 0xFD, 0xFF, 0xFF,                    //mov rsi, [Hooked_funcstruct]
0x40, 0x48, 0x8B, 0x1D, 0x38, 0xFD, 0xFF, 0xFF,                    //mov rbx, [verfiy_func_ptr]
0x48, 0x8D, 0xAC, 0x24, 0x28, 0x00, 0x00, 0x00,                    //lea rbp, [rsp + 0x28]
0x48, 0x89, 0x4D, 0x08,                                            //mov [rbp + 8], rcx
0x48, 0x89, 0x55, 0x10,							                   //mov [rbp + 0x10], rdx  
0x4C, 0x89, 0x45, 0x18, 						                   //mov [rbp + 0x18], r8
0x4C, 0x89, 0x4D, 0x20, 						                   //mov [rbp + 0x20], r9
0x4C, 0x48, 0x8D, 0x3D, 0xD0, 0x00, 0x00, 0x00,                    //lea rdi, [mem_protect_RXW]
0x4D, 0x31, 0xE4, 								                   //xor r12, r12
0x66,0x66,0x66,0x66,0x66,0x0F,0x1F,0x84,0x00,0x00,0x00,0x00,0x00,  //nop
0x4E, 0x8D, 0x2C, 0x26, 							               //lea r13, [rsi + r12]
0x49, 0x8B, 0x4D, 0x00, 							               //mov rcx, [r13]
0x49, 0x89, 0xCE, 								                   //mov r14, rcx
0x48, 0x85, 0xC9, 								                   //test rcx, rcx
0x74, 0x18, 										               //jz break
0xFF, 0xD7, 									                   //call rdi
0x85, 0xC0, 										               //test eax, eax
0x74, 0x0C, 										               //jz skip
0xF3, 0x41, 0x0F, 0x6F, 0x45, 0x20, 				               //movdqu xmm0, [r13 + 0x20]
0xF3, 0x41, 0x0F, 0x7F, 0x46, 0x00, 				               //movdqu [r14], xmm0
0x49, 0x83, 0xC4, 0x30, 							               //add r12, 0x30
0xEB, 0xD8, 										               //jmp continue
0x48, 0x89, 0xD9, 								                   //mov rcx, rbx
0xE8, 0x90, 0x00, 0x00, 0x00,   			                       //call mem_protect_RXW
0x48, 0x8B, 0x4D, 0x08, 						                   //mov rcx, [rbp + 8]
0x48, 0x8B, 0x55, 0x10, 						                   //mov rdx, [rbp + 0x10]
0x4C, 0x8B, 0x45, 0x18,     		                               //mov r8, [rbp + 0x18]
0x4C, 0x8B, 0x4D, 0x20,     	                                   //mov r9, [rbp + 0x20]
0xF3, 0x0F, 0x6F, 0x05, 0xF8, 0xFC, 0xFF, 0xFF,	                   //movdqu xmm0, [org_pattern]
0xF3, 0x0F, 0x7F, 0x03, 							               //movdqu [rbx], xmm0
0xFF, 0xD3, 										               //call rbx
0x49, 0x97, 										               //xchg r15, rax
0xF3, 0x0F, 0x6F, 0x05, 0xF8, 0xFC, 0xFF, 0xFF, 				   //movdqu xmm0, [Hooked_pattern]
0xF3, 0x0F, 0x7F, 0x03, 							               //movdqu [rbx], xmm0
0x4C, 0x48, 0x8D, 0x3D, 0x6C, 0x00, 0x00, 0x00,                    //lea rdi, [mem_protect_RX]
0x4D, 0x31, 0xE4, 								                   //xor r12, r12
0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,		       //nop
0x4E, 0x8D, 0x2C, 0x26, 							               //lea r13, [rsi + r12]
0x49, 0x8B, 0x4D, 0x00, 							               //mov rcx, [r13]
0x49, 0x89, 0xCE, 								                   //mov r14, rcx
0x48, 0x85, 0xC9, 								                   //test rcx, rcx
0x74, 0x14, 										               //jz break
0xF3, 0x41, 0x0F, 0x6F, 0x45, 0x10, 				               //movdqu xmm0, [r13 + 0x10]
0xF3, 0x41, 0x0F, 0x7F, 0x46, 0x00, 				               //movdqu [r14], xmm0
0xFF, 0xD7, 									                   //call rdi
0x49, 0x83, 0xC4, 0x30, 							               //add r12, 0x30
0xEB, 0xDC, 										               //jmp continue
0x48, 0x89, 0xD9, 								                   //mov rcx, rbx
0x48, 0xFF, 0xD7,             			                           //call rdi
0x49, 0x97, 										               //xchg r15, rax
0x48, 0x83, 0xC4, 0x68, 							               //add rsp, 0x68
0x5F, 0x5E, 0x5D, 0x5B,                                            //pop rdi, rsi, rbp, rbx,
0x41, 0x5C, 0x41, 0x5D, 0x41, 0x5E, 0x41, 0x5F,	                   //pop r15,r14,r13,r12
0xC3,                                                              //ret
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC,
//int3
0x41, 0xB8, 0x40, 0x00, 0x00, 0x00,    //Protect_RXW
0xBA, 0x00, 0x20, 0x00, 0x00,
0xE9, 0x10, 0x00, 0x00, 0x00,
0x41, 0xB8, 0x20, 0x00, 0x00, 0x00,    //Protect_RX
0xBA, 0x00, 0x20, 0x00, 0x00,
0xE9, 0x00, 0x00, 0x00, 0x00,
//Virtualprotect
0x48, 0x89, 0x54, 0x24, 0x18,
0x48, 0x83, 0xEC, 0x48,
0x4C, 0x8B, 0x15, 0x28, 0xFC, 0xFF, 0xFF,
0x49, 0xF7, 0xD2,
0xC7, 0x44, 0x24, 0x70, 0x00, 0x00, 0x00, 0x00,
0x45, 0x89, 0xC1,
0x4C, 0x8D, 0x44, 0x24, 0x60,
0x48, 0x81, 0xE1, 0x00, 0xF0, 0xFF, 0xFF,
0x48, 0x89, 0x4C, 0x24, 0x30,
0x48, 0x8D, 0x54, 0x24, 0x30,
0x4D, 0x8B, 0x52, 0x00,
0x48, 0x8D, 0x44, 0x24, 0x70,
0x48, 0x89, 0x44, 0x24, 0x20,
0x48, 0x83, 0xC9, 0xFF,
0x41, 0xFF, 0x52, 0x38,
0x85, 0xC0,
0x74, 0x08,
0x31, 0xC0,
0x48, 0x83, 0xC4, 0x48,
0xC3,
0xCC,
0xFF, 0xC0,
0x48, 0x83, 0xC4, 0x48,
0xC3,
//int3
0xCC, 0xCC, 0xCC,
//API_Openprocess
0x48, 0x83, 0xEC, 0x68,
0x4C, 0x8B, 0x05, 0xCD, 0xFB, 0xFF, 0xFF,
0x48, 0x33, 0xC0,
0x4C, 0x8D, 0x4C, 0x24, 0x20,
0x48, 0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,
0x0F, 0x57, 0xC0,
0x48, 0x89, 0x44, 0x24, 0x28,
0x49, 0xF7, 0xD0,
0x8B, 0xC2,
0x8B, 0xD1,
0x0F, 0x11, 0x44, 0x24, 0x30,
0x48, 0x89, 0x44, 0x24, 0x20,
0x48, 0x8D, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00,
0x0F, 0x11, 0x44, 0x24, 0x40,
0xC7, 0x44, 0x24, 0x30, 0x30, 0x00, 0x00, 0x00,
0x0F, 0x11, 0x44, 0x24, 0x50,
0xC7, 0x44, 0x24, 0x48, 0x02, 0x00, 0x00, 0x00,
0x49, 0x8B, 0x00,
0x4C, 0x8D, 0x44, 0x24, 0x30,
0xFF, 0x90, 0x48, 0x00, 0x00, 0x00,
0x85, 0xC0,
0x74, 0x08,
0x33, 0xC0,
0x48, 0x83, 0xC4, 0x68,
0xC3,
0xCC,
0x48, 0x8B, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,
0x48, 0x83, 0xC4, 0x68,
0xC3,
//int3
0xCC, 0xCC, 0xCC,
//int3
0x48, 0x83, 0xEC, 0x38,                     //API_ReadProcessmem
0x48, 0x8B, 0x05, 0x4D, 0xFB, 0xFF, 0xFF,
0x48, 0xF7, 0xD0,
0x48, 0x8B, 0x00,
0x4C, 0x8B, 0x50, 0x30,
0x48, 0x8D, 0x44, 0x24, 0x60,
0x48, 0x89, 0x44, 0x24, 0x20,
0x41, 0xFF, 0xD2,
0x85, 0xC0,
0x74, 0x08,
0x31, 0xC0,
0x48, 0x83, 0xC4, 0x38,
0xC3,
0xCC,
0xFF, 0xC0,
0x48, 0x83, 0xC4, 0x38,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x40, 0x53,                                 //API_Sleep
0x48, 0x83, 0xEC, 0x20,
0x48, 0x8B, 0x15, 0x0B, 0xFB, 0xFF, 0xFF,
0x8B, 0xD9,
0x48, 0x69, 0xCB, 0xF0, 0xD8, 0xFF, 0xFF,
0x48, 0xF7, 0xD2,
0x48, 0x8B, 0x12,
0x48, 0x89, 0x4C, 0x24, 0x38,
0x33, 0xC9,
0x48, 0x8B, 0x42, 0x68,
0x48, 0x8D, 0x54, 0x24, 0x38,
0xFF, 0xD0,
0x48, 0x83, 0xC4, 0x20,
0x5B,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x40, 0x53,                                 //PowerSaveSet
0x48, 0x83, 0xEC, 0x30,
0x89, 0xCB,
0xFF, 0x15, 0x22, 0xFB, 0xFF, 0xFF,
0x48, 0xB9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x48, 0x39, 0x01,
0xB8, 0x0A, 0x00, 0x00, 0x00,
0x2E, 0x0F, 0x44, 0xC3,
0x48, 0x83, 0xC4, 0x30,
0x5B,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x48, 0x89, 0x74, 0x24, 0x20,               //getprocaddr
0x57,
0x41, 0x55,
0x41, 0x56,
0x41, 0x57,
0x48, 0x8B, 0xF2,
0x4C, 0x8B, 0xC9,
0x48, 0x85, 0xC9,
0x0F, 0x84, 0x43, 0x01, 0x00, 0x00,
0x48, 0x85, 0xD2,
0x0F, 0x84, 0x3A, 0x01, 0x00, 0x00,
0xB8, 0x4D, 0x5A, 0x00, 0x00,
0x66, 0x39, 0x01,
0x0F, 0x85, 0x2C, 0x01, 0x00, 0x00,
0x8B, 0x41, 0x3C, 0x81, 0x3C, 0x08, 0x50, 0x45, 0x00, 0x00, 0x0F, 0x85, 0x1C, 0x01,
0x00, 0x00, 0x44, 0x8B, 0xBC, 0x08, 0x88, 0x00, 0x00, 0x00, 0x45, 0x85, 0xFF, 0x0F, 0x84, 0x0B,
0x01, 0x00, 0x00, 0x44, 0x8B, 0xAC, 0x08, 0x8C, 0x00, 0x00, 0x00, 0x41, 0xBE, 0xFF, 0xFF, 0xFF,
0xFF, 0x4A, 0x8D, 0x3C, 0x39, 0x48, 0x81, 0xFA, 0xFF, 0xFF, 0x00, 0x00, 0x77, 0x1A, 0x2B, 0x77,
0x10, 0x3B, 0x77, 0x14, 0x0F, 0x83, 0xE4, 0x00, 0x00, 0x00, 0x8B, 0x47, 0x1C, 0x48, 0x03, 0xC1,
0x8B, 0x14, 0xB0, 0xE9, 0xB3, 0x00, 0x00, 0x00, 0x44, 0x8B, 0x57, 0x18, 0x45, 0x85, 0xD2, 0x0F,
0x84, 0x94, 0x00, 0x00, 0x00, 0x4C, 0x89, 0x64, 0x24, 0x38, 0x45, 0x33, 0xDB, 0x44, 0x8B, 0x67,
0x20, 0x4D, 0x03, 0xE1, 0x41, 0x83, 0xEA, 0x01, 0x78, 0x7A, 0x48, 0x89, 0x5C, 0x24, 0x28, 0x48,
0x89, 0x6C, 0x24, 0x30, 0x66, 0x66, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x43, 0x8D, 0x1C, 0x1A, 0x4C, 0x8B, 0xC6, 0xD1, 0xFB, 0x41, 0x8B, 0x04, 0x9C, 0x49, 0x03, 0xC1,
0x4C, 0x2B, 0xC0, 0x66, 0x66, 0x66, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x41, 0x0F, 0xB6, 0x0C, 0x00, 0x0F, 0xB6, 0x10, 0x48, 0x8D, 0x40, 0x01, 0x84, 0xC9, 0x74, 0x04,
0x3A, 0xCA, 0x74, 0xEC, 0x3A, 0xCA, 0x73, 0x06, 0x44, 0x8D, 0x53, 0xFF, 0xEB, 0x17, 0x76, 0x06,
0x44, 0x8D, 0x5B, 0x01, 0xEB, 0x0F, 0x8B, 0x4F, 0x24, 0x45, 0x8D, 0x5A, 0x01, 0x49, 0x03, 0xC9,
0x44, 0x0F, 0xB7, 0x34, 0x59, 0x45, 0x3B, 0xDA, 0x7E, 0xA6, 0x48, 0x8B, 0x6C, 0x24, 0x30, 0x48,
0x8B, 0x5C, 0x24, 0x28, 0x4C, 0x8B, 0x64, 0x24, 0x38, 0x44, 0x3B, 0x77, 0x14, 0x73, 0x2F, 0x8B,
0x47, 0x1C, 0x49, 0x03, 0xC1, 0x41, 0x8B, 0xCE, 0x8B, 0x14, 0x88, 0x85, 0xD2, 0x74, 0x1F, 0x41,
0x3B, 0xD7, 0x72, 0x08, 0x43, 0x8D, 0x04, 0x2F,
0x3B, 0xD0,
0x72, 0x12,
0x8B, 0xC2,
0x49, 0x03, 0xC1,
0x48, 0x8B, 0x74, 0x24, 0x40,
0x41, 0x5F,
0x41, 0x5E,
0x41, 0x5D,
0x5F,
0xC3,
0x48, 0x8B, 0x74, 0x24, 0x40,
0x33, 0xC0,
0x41, 0x5F,
0x41, 0x5E,
0x41, 0x5D,
0x5F,
0xC3,
//getprocaddr_end
0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//Init_NtAPI
0x4C, 0x8B, 0xDC,
0x55, 0x56, 0x57,
0x49, 0x8D, 0x6B, 0xB8,
0x48, 0x81, 0xEC, 0x30, 0x01, 0x00, 0x00,
0x8B, 0x01, 0x49, 0x8B, 0xF0, 0x65, 0x48, 0x8B, 0x08, 0x48, 0x8B, 0x41, 0x18, 0x48, 0x8B,
0x48, 0x20, 0x48, 0x8B, 0x01, 0x48, 0x8B, 0x78, 0x20, 0x48, 0x85, 0xFF, 0x0F, 0x84, 0xC2, 0x07,
0x00, 0x00, 0x48, 0x8B, 0x00, 0x48, 0x83, 0x78, 0x20, 0x00, 0x0F, 0x84, 0xB4, 0x07, 0x00, 0x00,
0x49, 0x89, 0x5B, 0x08, 0x4D, 0x89, 0x73, 0x10, 0x45, 0x33, 0xF6, 0x8B, 0xDA, 0x85, 0xD2, 0x75,
0x46, 0x48, 0xB8, 0x88, 0x96, 0x91, 0x9A, 0xA0, 0x98, 0x9A, 0x8B, 0x48, 0x8D, 0x4C, 0x24, 0x38,
0x48, 0x89, 0x44, 0x24, 0x38, 0xB2, 0x02, 0x48, 0xB8, 0xA0, 0x89, 0x9A, 0x8D, 0x8C, 0x96, 0x90,
0x91, 0x48, 0x89, 0x44, 0x24, 0x40, 0xE8, 0xA5, 0x07, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38,
0x4C, 0x89, 0x74, 0x24, 0x48, 0x48, 0x8B, 0xCF, 0xE8, 0xF3, 0xFD, 0xFF, 0xFF, 0x48, 0x85, 0xC0,
0x74, 0x05, 0xFF, 0xD0, 0x48, 0x8B, 0x18, 0x48, 0xB8, 0xB1, 0x8B, 0xBE, 0x93, 0x93, 0x90, 0x9C,
0x9E, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x38, 0xB2, 0x03, 0x48, 0xB8, 0x8B,
0x9A, 0xA9, 0x96, 0x8D, 0x8B, 0x8A, 0x9E, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48, 0xB8, 0x93, 0xB2,
0x9A, 0x92, 0x90, 0x8D, 0x86, 0x32, 0x48, 0x89, 0x44, 0x24, 0x48, 0xE8, 0x50, 0x07, 0x00, 0x00,
0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4F, 0x48, 0x8B, 0xCF, 0xE8, 0x9E, 0xFD,
0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75, 0x18, 0x48, 0x8D, 0x55, 0xEC,
0x48, 0x8B, 0xC8, 0xE8, 0x58, 0x07, 0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0B, 0xB8, 0x02, 0xC0,
0x00, 0x00, 0xEB, 0x7F, 0x48, 0x89, 0x45, 0x88, 0x48, 0xB8, 0xB1, 0x8B, 0xB9, 0x8D, 0x9A, 0x9A,
0xA9, 0x96, 0x4C, 0x89, 0xBC, 0x24, 0x60, 0x01, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48,
0x8D, 0x4C, 0x24, 0x38, 0x48, 0xB8, 0x90, 0x8D, 0x86, 0xE6, 0x9E, 0x93, 0xB2, 0x9A, 0x49, 0xBF,
0x8D, 0x8B, 0x8A, 0x9E, 0x93, 0xB2, 0x9A, 0x92, 0xB2, 0x03, 0x48, 0x89, 0x44, 0x24, 0x48, 0x4C,
0x89, 0x7C, 0x24, 0x40, 0xE8, 0xD7, 0x06, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88,
0x74, 0x24, 0x4B, 0x48, 0x8B, 0xCF, 0xE8, 0x25, 0xFD, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16,
0x48, 0x85, 0xDB, 0x75, 0x39, 0x48, 0x8D, 0x55, 0xF0, 0x48, 0x8B, 0xC8, 0xE8, 0xDF, 0x06, 0x00,
0x00, 0x83, 0xF8, 0x01, 0x74, 0x2C, 0xB8, 0x03, 0xC0, 0x00, 0x00, 0x4C, 0x8B, 0xBC, 0x24, 0x60,
0x01, 0x00, 0x00, 0x48, 0x8B, 0x9C, 0x24, 0x50, 0x01, 0x00, 0x00, 0x4C, 0x8B, 0xB4, 0x24, 0x58,
0x01, 0x00, 0x00, 0x48, 0x81, 0xC4, 0x30, 0x01, 0x00, 0x00, 0x5F, 0x5E, 0x5D, 0xC3, 0x48, 0x89,
0x45, 0x90, 0x48, 0xB8, 0xB1, 0x8B, 0xAD, 0x9A, 0x9E, 0x9B, 0xA9, 0x96, 0x4C, 0x89, 0x7C, 0x24,
0x40, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0xB8, 0x90, 0x8D, 0x86,
0xF7, 0x93, 0x22, 0xB9, 0x8A, 0xB2, 0x03, 0x48, 0x89, 0x44, 0x24, 0x48, 0xE8, 0x4F, 0x06, 0x00,
0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4B, 0x48, 0x8B, 0xCF, 0xE8, 0x9D,
0xFC, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75, 0x1B, 0x48, 0x8D, 0x55,
0xF8, 0x48, 0x8B, 0xC8, 0xE8, 0x57, 0x06, 0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0E, 0xB8, 0x04,
0xC0, 0x00, 0x00, 0xE9, 0x73, 0xFF, 0xFF, 0xFF, 0x48, 0x89, 0x45, 0xA0, 0x48, 0xB8, 0xB1, 0x8B,
0xAF, 0x8D, 0x90, 0x8B, 0x9A, 0x9C, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x38,
0xB2, 0x03, 0x48, 0xB8, 0x8B, 0xA9, 0x96, 0x8D, 0x8B, 0x8A, 0x9E, 0x93, 0x48, 0x89, 0x44, 0x24,
0x40, 0x48, 0xB8, 0xB2, 0x9A, 0x92, 0x90, 0x8D, 0x86, 0xE9, 0xAF, 0x48, 0x89, 0x44, 0x24, 0x48,
0xE8, 0xDB, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4E, 0x48,
0x8B, 0xCF, 0xE8, 0x29, 0xFC, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75,
0x1B, 0x48, 0x8D, 0x55, 0xFC, 0x48, 0x8B, 0xC8, 0xE8, 0xE3, 0x05, 0x00, 0x00, 0x83, 0xF8, 0x01,
0x74, 0x0E, 0xB8, 0x06, 0xC0, 0x00, 0x00, 0xE9, 0xFF, 0xFE, 0xFF, 0xFF, 0x48, 0x89, 0x45, 0xA8,
0x48, 0xB8, 0xB1, 0x8B, 0xB0, 0x8F, 0x9A, 0x91, 0xAF, 0x8D, 0x48, 0x8D, 0x4C, 0x24, 0x60, 0x48,
0x89, 0x44, 0x24, 0x60, 0xB2, 0x02, 0x48, 0xB8, 0x90, 0x9C, 0x9A, 0x8C, 0x8C, 0x1A, 0xBF, 0xA2,
0x48, 0x89, 0x44, 0x24, 0x68, 0xE8, 0x76, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x60, 0x44,
0x88, 0x74, 0x24, 0x6D, 0x48, 0x8B, 0xCF, 0xE8, 0xC4, 0xFB, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74,
0x16, 0x48, 0x85, 0xDB, 0x75, 0x1B, 0x48, 0x8D, 0x55, 0x04, 0x48, 0x8B, 0xC8, 0xE8, 0x7E, 0x05,
0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0E, 0xB8, 0x08, 0xC0, 0x00, 0x00, 0xE9, 0x9A, 0xFE, 0xFF,
0xFF, 0x48, 0x89, 0x45, 0xB8, 0x48, 0xB8, 0xB1, 0x8B, 0xBB, 0x9A, 0x93, 0x9E, 0x86, 0xBA, 0x48,
0x8D, 0x4D, 0x18, 0x48, 0x89, 0x45, 0x18, 0xB2, 0x02, 0x48, 0xB8, 0x87, 0x9A, 0x9C, 0x8A, 0x8B,
0x96, 0x90, 0x91, 0x48, 0x89, 0x45, 0x20, 0xE8, 0x14, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x55, 0x18,
0x4C, 0x89, 0x75, 0x28, 0x48, 0x8B, 0xCF, 0xE8, 0x64, 0xFB, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x0F,
0x84, 0xC5, 0x04, 0x00, 0x00, 0x48, 0x89, 0x45, 0xD8, 0x48, 0x85, 0xDB, 0x0F, 0x85, 0xFE, 0x03,
0x00, 0x00, 0x8B, 0x48, 0x12, 0x4C, 0x8D, 0x40, 0x12, 0x81, 0xE1, 0xFF, 0xFF, 0xFF, 0x00, 0x81,
0xF9, 0x0F, 0x05, 0xC3, 0x00, 0x74, 0x17, 0x4C, 0x8D, 0x40, 0x08, 0x8B, 0x40, 0x08, 0x25, 0xFF,
0xFF, 0xFF, 0x00, 0x3D, 0x0F, 0x05, 0xC3, 0x00, 0x0F, 0x85, 0x8C, 0x04, 0x00, 0x00, 0x8B, 0x45,
0xEC, 0x48, 0x89, 0x44, 0x24, 0x40, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0x0B, 0xC2, 0x48, 0x8B, 0xC8, 0x81, 0xE1, 0xFF, 0x07,
0x00, 0x00, 0x48, 0xC1, 0xE1, 0x04, 0x49, 0x03, 0xC8, 0x8B, 0x01, 0x25, 0xFF, 0xFF, 0xFF, 0x00,
0x3D, 0x0F, 0x05, 0xC3, 0x00, 0x75, 0xD9, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0x0B, 0xC2, 0x48, 0x8B, 0xD8, 0x81, 0xE3, 0xFF, 0x07,
0x00, 0x00, 0x48, 0xC1, 0xE3, 0x04, 0x49, 0x03, 0xD8, 0x8B, 0x13, 0x81, 0xE2, 0xFF, 0xFF, 0xFF,
0x00, 0x81, 0xFA, 0x0F, 0x05, 0xC3, 0x00, 0x75, 0xD7, 0x48, 0xF7, 0xD1, 0xC7, 0x44, 0x24, 0x28,
0x04, 0x00, 0x00, 0x00, 0x48, 0x89, 0x4C, 0x24, 0x38, 0x4C, 0x8D, 0x4C, 0x24, 0x30, 0x48, 0x8D,
0x4C, 0x24, 0x38, 0x48, 0xC7, 0x44, 0x24, 0x48, 0xFF, 0xFF, 0xFF, 0xFF, 0x45, 0x33, 0xC0, 0x48,
0xC7, 0x44, 0x24, 0x30, 0x00, 0x80, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x58, 0x4C, 0x89, 0x74,
0x24, 0x58, 0xC7, 0x44, 0x24, 0x20, 0x00, 0x30, 0x00, 0x00, 0xE8, 0x11, 0x05, 0x00, 0x00, 0x85,
0xC0, 0x0F, 0x88, 0x64, 0xFD, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x58, 0x48, 0x8D, 0xB8, 0x00,
0x10, 0x00, 0x00, 0x48, 0x89, 0x38, 0x4C, 0x8B, 0x44, 0x24, 0x58, 0x49, 0x81, 0xC0, 0x00, 0x20,
0x00, 0x00, 0x44, 0x89, 0x75, 0x68, 0x48, 0x81, 0x6C, 0x24, 0x30, 0x00, 0x20, 0x00, 0x00, 0x4C,
0x89, 0x44, 0x24, 0x60, 0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0xF7, 0xD3, 0x48, 0x0B, 0xD0,
0x48, 0x8D, 0x44, 0x24, 0x70, 0x48, 0x33, 0xD0, 0x48, 0x8D, 0x45, 0xE0, 0x48, 0x8B, 0xCA, 0x48,
0xC1, 0xE9, 0x20, 0x4C, 0x8B, 0xC9, 0x4C, 0x8B, 0xD1, 0x4C, 0x33, 0xCA, 0x41, 0xF7, 0xD2, 0x4C,
0x33, 0xC8, 0x41, 0x0F, 0xB7, 0xC9, 0x45, 0x33, 0xD1, 0x49, 0x8B, 0xC1, 0x48, 0xC1, 0xE8, 0x10,
0x66, 0x41, 0x33, 0xC1, 0x49, 0xB9, 0xC7, 0x44, 0x24, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0x44, 0x0F,
0xB6, 0xD8, 0x48, 0x33, 0xC1, 0x0F, 0xB6, 0xC0, 0x48, 0x8D, 0x40, 0x40, 0x49, 0xC1, 0xE3, 0x04,
0x48, 0xC1, 0xE0, 0x04, 0x4D, 0x03, 0xD8, 0x4E, 0x8D, 0x04, 0x18, 0x0F, 0xB7, 0xC2, 0x66, 0xF7,
0xD0, 0x49, 0x89, 0x58, 0x08, 0x48, 0x33, 0xC1, 0x41, 0xC7, 0x40, 0x10, 0x50, 0x48, 0x8D, 0x05,
0x0F, 0xB6, 0xD0, 0x48, 0xB8, 0x4C, 0x87, 0x14, 0x24, 0x59, 0x50, 0x48, 0xB9, 0x49, 0x89, 0x00,
0x48, 0x83, 0xC2, 0x03, 0x41, 0xC6, 0x40, 0x28, 0xC3, 0x48, 0xC1, 0xE2, 0x04, 0x49, 0x03, 0xD0,
0x41, 0x0F, 0xB6, 0xCA, 0xC1, 0xE1, 0x04, 0x48, 0x03, 0xCA, 0x8D, 0x41, 0x60, 0x41, 0x2B, 0xC0,
0x83, 0xE8, 0x18, 0x41, 0x89, 0x40, 0x14, 0x48, 0x8B, 0xC2, 0x48, 0xC1, 0xE0, 0x20, 0x48, 0x0D,
0x48, 0xC7, 0x04, 0x24, 0x49, 0x89, 0x40, 0x18, 0x48, 0x8B, 0xC2, 0x49, 0x23, 0xC1, 0x48, 0x0D,
0xC7, 0x44, 0x24, 0x04, 0x49, 0x89, 0x40, 0x20, 0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0x00, 0xFF,
0xFF, 0xFF, 0x48, 0x89, 0x41, 0x60, 0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0x20, 0x02, 0x00, 0x00,
0x48, 0x89, 0x41, 0x68, 0x48, 0xB8, 0x48, 0x87, 0x04, 0x24, 0x48, 0x94, 0x48, 0x8B, 0x48, 0x89,
0x41, 0x70, 0x48, 0xB8, 0x68, 0x08, 0x48, 0x8B, 0x40, 0x00, 0x48, 0x83, 0x48, 0x89, 0x41, 0x78,
0x48, 0xB8, 0x50, 0x48, 0x8B, 0xC4, 0x48, 0x8D, 0xA4, 0x24, 0xC7, 0x81, 0x80, 0x00, 0x00, 0x00,
0xC4, 0x10, 0xC3, 0xCC, 0x48, 0x89, 0x42, 0x00, 0x48, 0xB8, 0x80, 0xF9, 0xFF, 0xFF, 0x48, 0x87,
0x2C, 0x24, 0x48, 0x89, 0x42, 0x08, 0x48, 0xB8, 0x48, 0x83, 0xEC, 0x08, 0x48, 0x89, 0x04, 0x24,
0x48, 0x89, 0x42, 0x10, 0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0xE0, 0xFE, 0xFF, 0xFF, 0x48, 0x89,
0x42, 0x18, 0x48, 0xB8, 0xFF, 0x30, 0x89, 0x28, 0x48, 0x8D, 0x40, 0x08, 0x48, 0x89, 0x42, 0x20,
0x48, 0xB8, 0x0F, 0x10, 0x40, 0x30, 0x0F, 0x11, 0x44, 0x24, 0x48, 0x89, 0x42, 0x28, 0x48, 0xB8,
0x28, 0x0F, 0x10, 0x40, 0x40, 0x0F, 0x11, 0x44, 0x48, 0x89, 0x42, 0x30, 0x48, 0xB8, 0x24, 0x38,
0x0F, 0x10, 0x40, 0x50, 0x0F, 0x11, 0x48, 0x89, 0x42, 0x38, 0x48, 0xB8, 0x44, 0x24, 0x48, 0x0F,
0x10, 0x40, 0x60, 0x0F, 0x48, 0x89, 0x42, 0x40, 0x49, 0xB9, 0x44, 0x48, 0xF7, 0xD1, 0xFF, 0xE1,
0xCC, 0xCC, 0x48, 0xB8, 0x11, 0x44, 0x24, 0x58, 0x48, 0x87, 0x40, 0x00, 0x48, 0x89, 0x42, 0x48,
0x4C, 0x89, 0x4A, 0x50, 0x4C, 0x89, 0xD9, 0x49, 0xF7, 0xD0, 0x48, 0xB8, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x89, 0x41, 0x18, 0x48, 0xB8, 0x51, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF,
0x48, 0xB9, 0x48, 0x89, 0x41, 0x00, 0x4C, 0x89, 0x41, 0x08, 0x4C, 0x89, 0x49, 0x10, 0xF3, 0x0F,
0x6F, 0x01, 0xF3, 0x41, 0x0F, 0x6F, 0x4B, 0x10, 0xF3, 0x0F, 0x7F, 0x41, 0x20, 0xF3, 0x0F, 0x7F,
0x49, 0x30, 0xF3, 0x0F, 0x7F, 0x41, 0x40, 0xF3, 0x0F, 0x7F, 0x49, 0x50, 0xF3, 0x0F, 0x7F, 0x41,
0x60, 0xF3, 0x0F, 0x7F, 0x49, 0x70, 0x41, 0xB9, 0x20, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24,
0x60, 0x4C, 0x8D, 0x44, 0x24, 0x30, 0x90, 0x8B, 0x45, 0xEC, 0x89, 0x41, 0x02, 0x8B, 0x45, 0x04,
0x48, 0x89, 0x4D, 0x88, 0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xFC, 0x48, 0x89,
0x4D, 0xB8, 0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xF8, 0x48, 0x89, 0x4D, 0xA8,
0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xFC, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48,
0x8D, 0x45, 0x68, 0x48, 0x89, 0x4D, 0xA0, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24,
0x20, 0x3E, 0x3E, 0xE8, 0x78, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x0F, 0x88, 0xCB, 0xFA, 0xFF, 0xFF,
0x0F, 0x28, 0x44, 0x24, 0x70, 0x48, 0x8D, 0x45, 0x68, 0x48, 0xC7, 0x44, 0x24, 0x30, 0x00, 0x20,
0x00, 0x00, 0x4C, 0x8D, 0x44, 0x24, 0x30, 0x0F, 0x11, 0x07, 0x48, 0x8D, 0x54, 0x24, 0x58, 0x41,
0xB9, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x28, 0x4D, 0x80, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x0F, 0x11,
0x4F, 0x10, 0x48, 0x89, 0x44, 0x24, 0x20, 0x0F, 0x28, 0x45, 0x90, 0x0F, 0x11, 0x47, 0x20, 0x0F,
0x28, 0x4D, 0xA0, 0x0F, 0x11, 0x4F, 0x30, 0x0F, 0x28, 0x45, 0xB0, 0x0F, 0x11, 0x47, 0x40, 0x0F,
0x28, 0x4D, 0xC0, 0x0F, 0x11, 0x4F, 0x50, 0x0F, 0x28, 0x45, 0xD0, 0x0F, 0x11, 0x47, 0x60, 0xE8,
0x0C, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x0F, 0x88, 0x5F, 0xFA, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24,
0x58, 0x48, 0xF7, 0xD0, 0x48, 0x89, 0x06, 0x33, 0xC0, 0xE9, 0x4D, 0xFA, 0xFF, 0xFF, 0xCC, 0xCC,
0xC7, 0x44, 0x24, 0x28, 0x04, 0x00, 0x00, 0x00, 0x4C, 0x8D, 0x4C, 0x24, 0x60, 0x4C, 0x89, 0x74,
0x24, 0x30, 0x48, 0x8D, 0x54, 0x24, 0x30, 0x48, 0xC7, 0x44, 0x24, 0x60, 0x00, 0x20, 0x00, 0x00,
0xC7, 0x44, 0x24, 0x20, 0x00, 0x30, 0x00, 0x00, 0x48, 0x83, 0xC9, 0xFF, 0x48, 0xFF, 0x55, 0x88,
0x85, 0xC0, 0x0F, 0x88, 0x13, 0xFA, 0xFF, 0xFF, 0x48, 0x8B, 0x4C, 0x24, 0x30, 0x4C, 0x8D, 0x44,
0x24, 0x60, 0x41, 0xB9, 0x02, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x30, 0x48, 0x8D, 0x81,
0x00, 0x10, 0x00, 0x00, 0x48, 0x89, 0x01, 0x48, 0x83, 0xC9, 0xFF, 0x0F, 0x28, 0x44, 0x24, 0x70,
0x0F, 0x11, 0x00, 0x0F, 0x28, 0x4D, 0x80, 0x0F, 0x11, 0x48, 0x10, 0x0F, 0x28, 0x45, 0x90, 0x0F,
0x11, 0x40, 0x20, 0x0F, 0x28, 0x4D, 0xA0, 0x0F, 0x11, 0x48, 0x30, 0x0F, 0x28, 0x45, 0xB0, 0x0F,
0x11, 0x40, 0x40, 0x0F, 0x28, 0x4D, 0xC0, 0x0F, 0x11, 0x48, 0x50, 0x0F, 0x28, 0x45, 0xD0, 0x0F,
0x11, 0x40, 0x60, 0x48, 0x8D, 0x45, 0x68, 0x48, 0x89, 0x44, 0x24, 0x20, 0x48, 0xFF, 0x55, 0xA8,
0x85, 0xC0, 0x0F, 0x85, 0xA3, 0xF9, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x30, 0x48, 0xF7, 0xD0,
0x48, 0x89, 0x06, 0x33, 0xC0, 0xE9, 0x91, 0xF9, 0xFF, 0xFF, 0xB8, 0xDE, 0xC0, 0xAD, 0xDE, 0xE9,
0x87, 0xF9, 0xFF, 0xFF, 0xB8, 0x35, 0x01, 0x00, 0xC0, 0x48, 0x81, 0xC4, 0x30, 0x01, 0x00, 0x00,
0x5F, 0x5E, 0x5D, 0xC3,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//dec_str_start
0x80, 0xC2, 0xFF, 0x74, 0x17, 0x0F, 0xB6, 0xC2, 0x48, 0x8D, 0x04, 0xC1, 0x0F, 0x1F, 0x40, 0x00,
0x48, 0xF7, 0x10, 0x48, 0x8D, 0x40, 0xF8, 0x80, 0xC2, 0xFF, 0x75, 0xF4, 0x0F, 0xB6, 0xC2, 0x48,
0xF7, 0x14, 0xC1, 0x48, 0x8D, 0x0C, 0xC1,
0xC3,
//dec_str_end
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//paser_syscallnum_start
0x4C, 0x8B, 0xD2, 0x4C, 0x8B, 0xC1, 0x48, 0x85, 0xC9, 0x0F, 0x84, 0xB9, 0x00, 0x00, 0x00, 0x8B,
0x01, 0x3D, 0x4C, 0x8B, 0xD1, 0xB8, 0x75, 0x0B, 0x8B, 0x41, 0x04, 0x89, 0x02, 0xB8, 0x01, 0x00,
0x00, 0x00, 0xC3, 0x3C, 0xE9, 0x74, 0x18, 0xB9, 0xFF, 0x25, 0x00, 0x00, 0x66, 0x3B, 0xC1, 0x74,
0x0E, 0xB9, 0x48, 0xB8, 0x00, 0x00, 0x66, 0x3B, 0xC1, 0x0F, 0x85, 0x89, 0x00, 0x00, 0x00, 0xB8,
0x01, 0x00, 0x00, 0x00, 0xB9, 0x10, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00,
0x8B, 0xD1, 0x4D, 0x8B, 0xC8, 0x4C, 0x2B, 0xCA, 0x41, 0x81, 0x39, 0x4C, 0x8B, 0xD1, 0xB8, 0x74,
0x46, 0x42, 0x81, 0x3C, 0x02, 0x4C, 0x8B, 0xD1, 0xB8, 0x4E, 0x8D, 0x0C, 0x02, 0x74, 0x10, 0x83,
0xC1, 0x10, 0xFF, 0xC0, 0x83, 0xF8, 0x20, 0x76, 0xD7, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0x83,
0xC1, 0x04, 0x46, 0x8B, 0x04, 0x01, 0x41, 0x8B, 0xD0, 0x44, 0x2B, 0xC0, 0x8B, 0xC8, 0xD1, 0xE9,
0xB8, 0x01, 0x00, 0x00, 0x00, 0x2B, 0xD1, 0x41, 0x81, 0x79, 0x08, 0xF6, 0x04, 0x25, 0x08, 0x44,
0x0F, 0x44, 0xC2, 0x45, 0x89, 0x02, 0xC3, 0x8B, 0xD0, 0xD1, 0xEA, 0x41, 0x81, 0x79, 0x08, 0xF6,
0x04, 0x25, 0x08, 0x0F, 0x45, 0xD0, 0x83, 0xC1, 0xFC, 0x4C, 0x2B, 0xC1,
0xB8, 0x01, 0x00, 0x00, 0x00,
0x41, 0x03, 0x10,
0x41, 0x89, 0x12,
0xC3,
0x33, 0xC0,
0xC3,
//paser_syscallnum_end
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//syscall_part
0x48, 0xFF, 0x71, 0x08, 0x4C, 0x8B, 0x51, 0x10, 0x48, 0x8B, 0x49, 0x00, 0x44, 0x48, 0x8D, 0x05,
0x6C, 0x00, 0x00, 0x00, 0x50, 0x48, 0x8B, 0xC4, 0x48, 0x8D, 0xA4, 0x24, 0x80, 0xF9, 0xFF, 0xFF,
0x48, 0x87, 0x2C, 0x24, 0x48, 0x83, 0xEC, 0x08, 0x48, 0x89, 0x04, 0x24, 0x48, 0x8D, 0xA4, 0x24,
0xE0, 0xFE, 0xFF, 0xFF, 0xFF, 0x30, 0x89, 0x28, 0x48, 0x8D, 0x40, 0x08, 0x0F, 0x10, 0x40, 0x30,
0x0F, 0x11, 0x44, 0x24, 0x28, 0x0F, 0x10, 0x40, 0x40, 0x0F, 0x11, 0x44, 0x24, 0x38, 0x0F, 0x10,
0x40, 0x50, 0x0F, 0x11, 0x44, 0x24, 0x48, 0x0F, 0x10, 0x40, 0x60, 0x0F, 0x11, 0x44, 0x24, 0x58,
0x48, 0x87, 0x40, 0x00, 0x44, 0x48, 0xF7, 0xD1, 0xFF, 0xE1, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0x48, 0x8D, 0xA4, 0x24, 0x00, 0xF0, 0xFF, 0xFF, 0x48, 0x8D, 0xA4, 0x24, 0x00, 0xF0, 0xFF, 0xFF,
0x48, 0x8D, 0xA4, 0x24, 0x20, 0x21, 0x00, 0x00, 0x48, 0x87, 0x04, 0x24, 0x48, 0x94,
0x48, 0x8B, 0x68, 0x08,
0x48, 0x8B, 0x40, 0x00,
0x48, 0x83, 0xC4, 0x10,
0xC3,
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
};

#define shellcode_entryVA           (0x1D0)
#define HKSR_UISet_FuncVA           (0x220)
#define GI_UnHooked_UI_fVA          (0x240)
#define GI_hooked_Vfunc_VA          (0x2D0)
#define PowerSaveSet_FuncVA         (0x560)


#endif // SHELLCODE_HEADER_H